apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-app
  namespace: ecommerce
  labels:
    app: ecommerce-php
    component: web
    version: "1.0.0"
  annotations:
    description: "Deployment de aplicación e-commerce PHP"
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: ecommerce-php
      component: web
  template:
    metadata:
      labels:
        app: ecommerce-php
        component: web
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "false"
        prometheus.io/port: "80"
        prometheus.io/path: "/health"
    spec:
      securityContext:
        runAsNonRoot: false
        fsGroup: 33 
      
      # Configuración de contenedores
      containers:
      - name: ecommerce-php
        image: "ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/ecommerce-php:latest"
        imagePullPolicy: Always
      
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        
        envFrom:
        - configMapRef:
            name: ecommerce-config
        
        # Variables sensibles desde Secrets
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: APP_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: app-secret
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /
            port: http
            httpHeaders:
            - name: Host
              value: localhost
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /
            port: http
            httpHeaders:
            - name: Host
              value: localhost
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        # Startup probe para aplicaciones lentas
        startupProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        
        # Recursos
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Volúmenes para uploads
        volumeMounts:
        - name: uploads-volume
          mountPath: /var/www/html/uploads
        - name: tmp-volume
          mountPath: /tmp
      
      # Configuración de volúmenes
      volumes:
      - name: uploads-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: tmp-volume
        emptyDir:
          sizeLimit: 100Mi
      
      restartPolicy: Always
      
      dnsPolicy: ClusterFirst
      